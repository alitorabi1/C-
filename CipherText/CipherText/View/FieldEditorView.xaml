<UserControl x:Class="FieldEditorView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:CipherText">
  <UserControl.Resources>
    <local:FieldTypeConverter x:Key="fieldTypeConverter" />
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

  </UserControl.Resources>

  <Border Margin="3.5">
    <Border.Style>
      <Style TargetType="{x:Type Border}">
        <Style.Triggers>

          <DataTrigger Binding="{Binding Path=IsFieledInEditMode}" Value="True">
            <Setter Property="Padding" Value="0,3.5, 0, 0" />
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="7,0,7,7" />

          </DataTrigger>

        </Style.Triggers>
      </Style>
    </Border.Style>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="125" />
        <ColumnDefinition Width="*" MinWidth="100" />
        <ColumnDefinition Width="23" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <TextBlock x:Name="tbFieldTag" Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextWrapping="Wrap" Margin="10,0,0,0" Text="{Binding Path=CardField.FieldTag}" />

      <TextBox Margin="10,0,0,0" x:Name="txtFieldTag" Visibility="{Binding Path=InSchemaEditingMode, 
            Converter={StaticResource booleanToVisibilityConverter}}" MaxLength="100" Text="{Binding 
                Path=CardField.FieldTag, 
                StringFormat=\{0:\}, 
                Mode=TwoWay, 
                UpdateSourceTrigger=LostFocus, 
                NotifyOnValidationError=True, 
                ValidatesOnDataErrors=True, 
                ValidatesOnExceptions=True}">
        <TextBox.Style>
          <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding Path=CardField.FieldTag}" Value="Change Me">
                <Setter Property="TextBox.Foreground" Value="Red" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </TextBox.Style>
      </TextBox>

      <TextBox Margin="10,0,0,0" x:Name="txtFieldData" Grid.Column="1" MaxLength="{Binding Path=CardField.MaximumLength}" Text="{Binding 
            Path=CardField.FieldData, 
            StringFormat=\{0:\}, 
            Mode=TwoWay, 
            UpdateSourceTrigger=LostFocus, 
            NotifyOnValidationError=True, 
            ValidatesOnDataErrors=True, 
            ValidatesOnExceptions=True}" />

      <Button IsTabStop="False" Command="{Binding Path=GeneratePasswordCommand}" ToolTip="Click to generate new password." Grid.Column="2" Height="16" Width="16" Visibility="{Binding Path=CardField.FieldType, Converter={StaticResource fieldTypeConverter}}" Style="{StaticResource gridButtonStyle}">
        <Image Source="{StaticResource keyImage}" Stretch="UniformToFill" />
      </Button>

      <TextBox x:Name="txtFieldSortOrder" Margin="10,0" IsTabStop="False" Visibility="{Binding Path=InSchemaEditingMode, Converter={StaticResource booleanToVisibilityConverter}}" Grid.Column="3" MaxLength="3" Width="50" Text="{Binding Path=CardField.FieldSortOrder, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />

      <Button Margin="7,0" IsTabStop="False" Command="{Binding Path=EditFieldCommand}" ToolTip="Click to edit this field." Grid.Column="4" Height="14" Width="14" Visibility="{Binding Path=InSchemaEditingMode, Converter={StaticResource booleanToVisibilityConverter}}" Style="{StaticResource gridButtonStyle}">
        <Image Source="{StaticResource editImage}" Stretch="UniformToFill" />
      </Button>

      <Button Margin="7,0" IsTabStop="False" Command="{Binding Path=ContractEditFieldCommand}" ToolTip="Click to contract this edit field." Grid.Column="4" Height="16" Width="16" Visibility="{Binding Path=IsFieledInEditMode, Converter={StaticResource booleanToVisibilityConverter}}" Style="{StaticResource editOkButtonStyle}" />

      <Button Margin="7,0" IsTabStop="False" Command="{Binding Path=RemoveFieldCommand}" ToolTip="Click to remove this field from the form." Grid.Column="5" Height="14" Width="14" Visibility="{Binding Path=InSchemaEditingMode, Converter={StaticResource booleanToVisibilityConverter}}" Style="{StaticResource gridButtonStyle}">
        <Image Source="{StaticResource deleteImage}" Stretch="UniformToFill" />
      </Button>

      <Grid Visibility="{Binding Path=IsFieledInEditMode, Converter={StaticResource booleanToVisibilityConverter}}" Margin="11,7,0,7" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="140" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="115" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Column="0" Text="Max Len" VerticalAlignment="Center" />
        <TextBox x:Name="txtMaximumLength" Grid.Column="1" VerticalAlignment="Center" Margin="10,0,0,0" MaxLength="3" Width="50" Text="{Binding Path=CardField.MaximumLength, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
        <CheckBox Grid.Column="2" Content="Is Required" VerticalAlignment="Center" Margin="11,0,0,0" IsChecked="{Binding Path=CardField.IsRequired, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
        <TextBlock Grid.Column="3" Margin="11,0,0,0" Text="Type" VerticalAlignment="Center" />
        <ComboBox Grid.Column="4" Margin="7,0,0,0" ItemsSource="{Binding Path=AvailableFieldTypes}" SelectedValue="{Binding Path=CardField.FieldType}" SelectedValuePath="Value" DisplayMemberPath="DisplayName" IsSynchronizedWithCurrentItem="True" />
        <TextBlock Grid.Column="5" Margin="11,0,0,0" Text="Case" VerticalAlignment="Center" />
        <ComboBox Grid.Column="6" Margin="7,0,0,0" ItemsSource="{Binding Path=AvailableFieldCases}" SelectedValue="{Binding Path=CardField.FieldCase}" SelectedValuePath="Value" DisplayMemberPath="DisplayName" IsSynchronizedWithCurrentItem="True" />

      </Grid>

      <!--read the comment in the code behind-->
      <Border Grid.RowSpan="2" TargetUpdated="OnIsMarkedForDeletetUpdated" Visibility="{Binding Path=IsMarkedForDelete, Converter={StaticResource booleanToVisibilityConverter}, NotifyOnTargetUpdated=True}" Grid.ColumnSpan="6" Background="DarkGray" BorderBrush="Black" BorderThickness="1" CornerRadius="7,0,7,7">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
            <TextBlock Foreground="Black" FontWeight="Bold" Text="{Binding Path=CardField.FieldTag}" Margin="0,0,7,0" />
            <TextBlock Foreground="Black" FontWeight="Bold" Text="will be removed on Save" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
          </StackPanel>
          <Button Margin="0,0,8,0" Grid.Column="1" HorizontalAlignment="Right" IsTabStop="False" Command="{Binding Path=RestoreFieldCommand}" ToolTip="Click to restore deleted field to the form." Height="14" Width="14" Style="{StaticResource gridButtonStyle}">
            <Image Source="{StaticResource addImage}" Stretch="UniformToFill" />
          </Button>
        </Grid>

      </Border>
    </Grid>
  </Border>

</UserControl>